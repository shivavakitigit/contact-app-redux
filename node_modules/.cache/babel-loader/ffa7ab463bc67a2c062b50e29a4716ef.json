{"ast":null,"code":"const globalState = {\n  contacts: [{\n    name: \"Shiva\",\n    phoneNumber: \"1234512345\",\n    email: \"vshiva@gmail.com\"\n  }, {\n    name: \"Sai\",\n    phoneNumber: \"1234512345\",\n    email: \"sai@gmai.com\"\n  }, {\n    name: \"sushanth\",\n    phoneNumber: \"78878787\",\n    email: \"sushanth@gmai.com\"\n  }],\n  contact: {}\n};\nexport const contactsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : globalState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // debugger;\n  switch (action.type) {\n    case \"GET_ALL_CONTACTS\":\n      return { ...state\n      };\n\n    case \"ADD_CONTACT\":\n      {\n        let contacts = [...state.contacts]; //previous Data\n\n        contacts.push(action.payload); //update data\n\n        return { ...globalState,\n          contacts\n        };\n      }\n\n    case \"REGISTER\":\n      return { ...state,\n        redirectTo: action.error ? null : \"/\",\n        token: action.error ? null : action.payload.user.token,\n        currentUser: action.error ? null : action.payload.user\n      };\n\n    case \"EDIT_CONTACT\":\n      {\n        let contacts = [...state.contacts];\n        contacts[action.id] = action.payload;\n        return { ...state,\n          contacts\n        };\n      }\n\n    case \"DELETE_CONTACT\":\n      {\n        let contacts = [...state.contacts];\n        contacts.splice(action.id, 1);\n        return { ...state,\n          contacts\n        };\n      }\n\n    case \"GET_SINGLE_CONTACT\":\n      return { ...state,\n        contact: { ...state.contacts[action.index],\n          id: action.index\n        }\n      };\n\n    case \"FILTER_CONTACTS\":\n      {\n        let contacts = [...state.contacts];\n        let filteredContacts = contacts.filter(contact => contact.name.toLowerCase().indexOf(action.searchInput.toLowerCase()) !== -1);\n        return { ...state,\n          contacts: filteredContacts\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["globalState","contacts","name","phoneNumber","email","contact","contactsReducer","state","action","type","push","payload","redirectTo","error","token","user","currentUser","id","splice","index","filteredContacts","filter","toLowerCase","indexOf","searchInput"],"sources":["/Users/shiva/Desktop/React/git/contact-app-redux/src/redux/reducers/contacts.js"],"sourcesContent":["const globalState = {\n  contacts: [\n    { name: \"Shiva\", phoneNumber: \"1234512345\", email: \"vshiva@gmail.com\" },\n    { name: \"Sai\", phoneNumber: \"1234512345\", email: \"sai@gmai.com\"},\n    { name: \"sushanth\", phoneNumber: \"78878787\", email: \"sushanth@gmai.com\"},\n\n  ],\n  contact: {},\n};\nexport const contactsReducer = (state = globalState, action) => {\n  // debugger;\n  switch (action.type) {\n    case \"GET_ALL_CONTACTS\":\n      return { ...state };\n    case \"ADD_CONTACT\": {\n      let contacts = [...state.contacts];  //previous Data\n      contacts.push(action.payload);  //update data\n      return { ...globalState, contacts };  \n    }\n\n    case \"REGISTER\":\n      return {\n        ...state,\n        redirectTo: action.error ? null : \"/\",\n        token: action.error ? null : action.payload.user.token,\n        currentUser: action.error ? null : action.payload.user,\n      };\n\n    case \"EDIT_CONTACT\": {\n      let contacts = [...state.contacts];\n      contacts[action.id] = action.payload;\n      return { ...state, contacts };\n    }\n    case \"DELETE_CONTACT\": {\n      let contacts = [...state.contacts];\n      contacts.splice(action.id, 1);\n      return { ...state, contacts };\n    }\n    case \"GET_SINGLE_CONTACT\":\n      return {\n        ...state,\n        contact: { ...state.contacts[action.index], id: action.index },\n      };\n    case \"FILTER_CONTACTS\": {\n      let contacts = [...state.contacts];\n      let filteredContacts = contacts.filter(\n        (contact) =>\n          contact.name\n            .toLowerCase()\n            .indexOf(action.searchInput.toLowerCase()) !== -1\n      );\n      return { ...state, contacts: filteredContacts };\n    }\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG;EAClBC,QAAQ,EAAE,CACR;IAAEC,IAAI,EAAE,OAAR;IAAiBC,WAAW,EAAE,YAA9B;IAA4CC,KAAK,EAAE;EAAnD,CADQ,EAER;IAAEF,IAAI,EAAE,KAAR;IAAeC,WAAW,EAAE,YAA5B;IAA0CC,KAAK,EAAE;EAAjD,CAFQ,EAGR;IAAEF,IAAI,EAAE,UAAR;IAAoBC,WAAW,EAAE,UAAjC;IAA6CC,KAAK,EAAE;EAApD,CAHQ,CADQ;EAOlBC,OAAO,EAAE;AAPS,CAApB;AASA,OAAO,MAAMC,eAAe,GAAG,YAAiC;EAAA,IAAhCC,KAAgC,uEAAxBP,WAAwB;EAAA,IAAXQ,MAAW;;EAC9D;EACA,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,kBAAL;MACE,OAAO,EAAE,GAAGF;MAAL,CAAP;;IACF,KAAK,aAAL;MAAoB;QAClB,IAAIN,QAAQ,GAAG,CAAC,GAAGM,KAAK,CAACN,QAAV,CAAf,CADkB,CACmB;;QACrCA,QAAQ,CAACS,IAAT,CAAcF,MAAM,CAACG,OAArB,EAFkB,CAEc;;QAChC,OAAO,EAAE,GAAGX,WAAL;UAAkBC;QAAlB,CAAP;MACD;;IAED,KAAK,UAAL;MACE,OAAO,EACL,GAAGM,KADE;QAELK,UAAU,EAAEJ,MAAM,CAACK,KAAP,GAAe,IAAf,GAAsB,GAF7B;QAGLC,KAAK,EAAEN,MAAM,CAACK,KAAP,GAAe,IAAf,GAAsBL,MAAM,CAACG,OAAP,CAAeI,IAAf,CAAoBD,KAH5C;QAILE,WAAW,EAAER,MAAM,CAACK,KAAP,GAAe,IAAf,GAAsBL,MAAM,CAACG,OAAP,CAAeI;MAJ7C,CAAP;;IAOF,KAAK,cAAL;MAAqB;QACnB,IAAId,QAAQ,GAAG,CAAC,GAAGM,KAAK,CAACN,QAAV,CAAf;QACAA,QAAQ,CAACO,MAAM,CAACS,EAAR,CAAR,GAAsBT,MAAM,CAACG,OAA7B;QACA,OAAO,EAAE,GAAGJ,KAAL;UAAYN;QAAZ,CAAP;MACD;;IACD,KAAK,gBAAL;MAAuB;QACrB,IAAIA,QAAQ,GAAG,CAAC,GAAGM,KAAK,CAACN,QAAV,CAAf;QACAA,QAAQ,CAACiB,MAAT,CAAgBV,MAAM,CAACS,EAAvB,EAA2B,CAA3B;QACA,OAAO,EAAE,GAAGV,KAAL;UAAYN;QAAZ,CAAP;MACD;;IACD,KAAK,oBAAL;MACE,OAAO,EACL,GAAGM,KADE;QAELF,OAAO,EAAE,EAAE,GAAGE,KAAK,CAACN,QAAN,CAAeO,MAAM,CAACW,KAAtB,CAAL;UAAmCF,EAAE,EAAET,MAAM,CAACW;QAA9C;MAFJ,CAAP;;IAIF,KAAK,iBAAL;MAAwB;QACtB,IAAIlB,QAAQ,GAAG,CAAC,GAAGM,KAAK,CAACN,QAAV,CAAf;QACA,IAAImB,gBAAgB,GAAGnB,QAAQ,CAACoB,MAAT,CACpBhB,OAAD,IACEA,OAAO,CAACH,IAAR,CACGoB,WADH,GAEGC,OAFH,CAEWf,MAAM,CAACgB,WAAP,CAAmBF,WAAnB,EAFX,MAEiD,CAAC,CAJ/B,CAAvB;QAMA,OAAO,EAAE,GAAGf,KAAL;UAAYN,QAAQ,EAAEmB;QAAtB,CAAP;MACD;;IACD;MACE,OAAOb,KAAP;EA3CJ;AA6CD,CA/CM"},"metadata":{},"sourceType":"module"}